/* automatically generated by rust-bindgen */

pub use libc;

pub enum Struct_NVGcontext { }
#[repr(C)]
pub struct Struct_NVGcolor;// { }
#[repr(C)]
pub struct Union_Unnamed1 {
    pub data: [u32, ..4u],
}
impl Union_Unnamed1 {
    pub fn rgba(&mut self) -> *mut [::libc::c_float, ..4u] {
        unsafe { ::std::mem::transmute(self) }
    }
}
#[repr(C)]
pub struct Struct_Unnamed2 {
    pub r: ::libc::c_float,
    pub g: ::libc::c_float,
    pub b: ::libc::c_float,
    pub a: ::libc::c_float,
}
#[repr(C)]
pub struct Struct_NVGpaint {
    pub xform: [::libc::c_float, ..6u],
    pub extent: [::libc::c_float, ..2u],
    pub radius: ::libc::c_float,
    pub feather: ::libc::c_float,
    pub innerColor: Struct_NVGcolor,
    pub outerColor: Struct_NVGcolor,
    pub image: ::libc::c_int,
    pub repeat: ::libc::c_int,
}
pub type Enum_NVGwinding = ::libc::c_uint;
pub static NVG_CCW: ::libc::c_uint = 1;
pub static NVG_CW: ::libc::c_uint = 2;
pub type Enum_NVGsolidity = ::libc::c_uint;
pub static NVG_SOLID: ::libc::c_uint = 1;
pub static NVG_HOLE: ::libc::c_uint = 2;
pub type Enum_NVGlineCap = ::libc::c_uint;
pub static NVG_BUTT: ::libc::c_uint = 0;
pub static NVG_ROUND: ::libc::c_uint = 1;
pub static NVG_SQUARE: ::libc::c_uint = 2;
pub static NVG_BEVEL: ::libc::c_uint = 3;
pub static NVG_MITER: ::libc::c_uint = 4;
pub type Enum_NVGpatternRepeat = ::libc::c_uint;
pub static NVG_NOREPEAT: ::libc::c_uint = 0;
pub static NVG_REPEATX: ::libc::c_uint = 1;
pub static NVG_REPEATY: ::libc::c_uint = 2;
pub type Enum_NVGalign = ::libc::c_uint;
pub static NVG_ALIGN_LEFT: ::libc::c_uint = 1;
pub static NVG_ALIGN_CENTER: ::libc::c_uint = 2;
pub static NVG_ALIGN_RIGHT: ::libc::c_uint = 4;
pub static NVG_ALIGN_TOP: ::libc::c_uint = 8;
pub static NVG_ALIGN_MIDDLE: ::libc::c_uint = 16;
pub static NVG_ALIGN_BOTTOM: ::libc::c_uint = 32;
pub static NVG_ALIGN_BASELINE: ::libc::c_uint = 64;
#[repr(C)]
pub struct Struct_NVGglyphPosition {
    pub _str: *::libc::c_char,
    pub x: ::libc::c_float,
    pub minx: ::libc::c_float,
    pub maxx: ::libc::c_float,
}
#[repr(C)]
pub struct Struct_NVGtextRow {
    pub start: *::libc::c_char,
    pub end: *::libc::c_char,
    pub next: *::libc::c_char,
    pub width: ::libc::c_float,
    pub minx: ::libc::c_float,
    pub maxx: ::libc::c_float,
}
pub type Enum_NVGtexture = ::libc::c_uint;
pub static NVG_TEXTURE_ALPHA: ::libc::c_uint = 1;
pub static NVG_TEXTURE_RGBA: ::libc::c_uint = 2;
#[repr(C)]
pub struct Struct_NVGscissor {
    pub xform: [::libc::c_float, ..6u],
    pub extent: [::libc::c_float, ..2u],
}
#[repr(C)]
pub struct Struct_NVGvertex {
    pub x: ::libc::c_float,
    pub y: ::libc::c_float,
    pub u: ::libc::c_float,
    pub v: ::libc::c_float,
}
#[repr(C)]
pub struct Struct_NVGpath {
    pub first: ::libc::c_int,
    pub count: ::libc::c_int,
    pub closed: ::libc::c_uchar,
    pub nbevel: ::libc::c_int,
    pub fill: *mut Struct_NVGvertex,
    pub nfill: ::libc::c_int,
    pub stroke: *mut Struct_NVGvertex,
    pub nstroke: ::libc::c_int,
    pub winding: ::libc::c_int,
    pub convex: ::libc::c_int,
}
#[repr(C)]
pub struct Struct_NVGparams {
    pub userPtr: *mut ::libc::c_void,
    pub edgeAntiAlias: ::libc::c_int,
    pub renderCreate: ::std::option::Option<extern "C" fn
                                                (arg1: *mut ::libc::c_void)
                                                -> ::libc::c_int>,
    pub renderCreateTexture: ::std::option::Option<extern "C" fn
                                                       (arg1:
                                                            *mut ::libc::c_void,
                                                        arg2: ::libc::c_int,
                                                        arg3: ::libc::c_int,
                                                        arg4: ::libc::c_int,
                                                        arg5:
                                                            *::libc::c_uchar)
                                                       -> ::libc::c_int>,
    pub renderDeleteTexture: ::std::option::Option<extern "C" fn
                                                       (arg1:
                                                            *mut ::libc::c_void,
                                                        arg2: ::libc::c_int)
                                                       -> ::libc::c_int>,
    pub renderUpdateTexture: ::std::option::Option<extern "C" fn
                                                       (arg1:
                                                            *mut ::libc::c_void,
                                                        arg2: ::libc::c_int,
                                                        arg3: ::libc::c_int,
                                                        arg4: ::libc::c_int,
                                                        arg5: ::libc::c_int,
                                                        arg6: ::libc::c_int,
                                                        arg7:
                                                            *::libc::c_uchar)
                                                       -> ::libc::c_int>,
    pub renderGetTextureSize: ::std::option::Option<extern "C" fn
                                                        (arg1:
                                                             *mut ::libc::c_void,
                                                         arg2: ::libc::c_int,
                                                         arg3:
                                                             *mut ::libc::c_int,
                                                         arg4:
                                                             *mut ::libc::c_int)
                                                        -> ::libc::c_int>,
    pub renderViewport: ::std::option::Option<extern "C" fn
                                                  (arg1: *mut ::libc::c_void,
                                                   arg2: ::libc::c_int,
                                                   arg3: ::libc::c_int)>,
    pub renderFlush: ::std::option::Option<extern "C" fn
                                               (arg1: *mut ::libc::c_void)>,
    pub renderFill: ::std::option::Option<extern "C" fn
                                              (arg1: *mut ::libc::c_void,
                                               arg2: *mut Struct_NVGpaint,
                                               arg3: *mut Struct_NVGscissor,
                                               arg4: ::libc::c_float,
                                               arg5: *::libc::c_float,
                                               arg6: *Struct_NVGpath,
                                               arg7: ::libc::c_int)>,
    pub renderStroke: ::std::option::Option<extern "C" fn
                                                (arg1: *mut ::libc::c_void,
                                                 arg2: *mut Struct_NVGpaint,
                                                 arg3: *mut Struct_NVGscissor,
                                                 arg4: ::libc::c_float,
                                                 arg5: ::libc::c_float,
                                                 arg6: *Struct_NVGpath,
                                                 arg7: ::libc::c_int)>,
    pub renderTriangles: ::std::option::Option<extern "C" fn
                                                   (arg1: *mut ::libc::c_void,
                                                    arg2:
                                                        *mut Struct_NVGpaint,
                                                    arg3:
                                                        *mut Struct_NVGscissor,
                                                    arg4: *Struct_NVGvertex,
                                                    arg5: ::libc::c_int)>,
    pub renderDelete: ::std::option::Option<extern "C" fn
                                                (arg1: *mut ::libc::c_void)>,
}
extern "C" {
    pub fn nvgBeginFrame(ctx: *mut Struct_NVGcontext,
                         windowWidth: ::libc::c_int,
                         windowHeight: ::libc::c_int,
                         devicePixelRatio: ::libc::c_float);
    pub fn nvgEndFrame(ctx: *mut Struct_NVGcontext);
    pub fn nvgRGB(r: ::libc::c_uchar, g: ::libc::c_uchar, b: ::libc::c_uchar)
     -> Struct_NVGcolor;
    pub fn nvgRGBf(r: ::libc::c_float, g: ::libc::c_float, b: ::libc::c_float)
     -> Struct_NVGcolor;
    pub fn nvgRGBA(r: ::libc::c_uchar, g: ::libc::c_uchar, b: ::libc::c_uchar,
                   a: ::libc::c_uchar) -> Struct_NVGcolor;
    pub fn nvgRGBAf(r: ::libc::c_float, g: ::libc::c_float,
                    b: ::libc::c_float, a: ::libc::c_float) ->
     Struct_NVGcolor;
    pub fn nvgLerpRGBA(c0: Struct_NVGcolor, c1: Struct_NVGcolor,
                       u: ::libc::c_float) -> Struct_NVGcolor;
    pub fn nvgTransRGBA(c0: Struct_NVGcolor, a: ::libc::c_uchar) ->
     Struct_NVGcolor;
    pub fn nvgTransRGBAf(c0: Struct_NVGcolor, a: ::libc::c_float) ->
     Struct_NVGcolor;
    pub fn nvgHSL(h: ::libc::c_float, s: ::libc::c_float, l: ::libc::c_float)
     -> Struct_NVGcolor;
    pub fn nvgHSLA(h: ::libc::c_float, s: ::libc::c_float, l: ::libc::c_float,
                   a: ::libc::c_uchar) -> Struct_NVGcolor;
    pub fn nvgSave(ctx: *mut Struct_NVGcontext);
    pub fn nvgRestore(ctx: *mut Struct_NVGcontext);
    pub fn nvgReset(ctx: *mut Struct_NVGcontext);
    pub fn nvgStrokeColor(ctx: *mut Struct_NVGcontext,
                          color: Struct_NVGcolor);
    pub fn nvgStrokePaint(ctx: *mut Struct_NVGcontext,
                          paint: Struct_NVGpaint);
    pub fn nvgFillColor(ctx: *mut Struct_NVGcontext, color: Struct_NVGcolor);
    pub fn nvgFillPaint(ctx: *mut Struct_NVGcontext, paint: Struct_NVGpaint);
    pub fn nvgMiterLimit(ctx: *mut Struct_NVGcontext, limit: ::libc::c_float);
    pub fn nvgStrokeWidth(ctx: *mut Struct_NVGcontext, size: ::libc::c_float);
    pub fn nvgLineCap(ctx: *mut Struct_NVGcontext, cap: ::libc::c_int);
    pub fn nvgLineJoin(ctx: *mut Struct_NVGcontext, join: ::libc::c_int);
    pub fn nvgGlobalAlpha(ctx: *mut Struct_NVGcontext,
                          alpha: ::libc::c_float);
    pub fn nvgResetTransform(ctx: *mut Struct_NVGcontext);
    pub fn nvgTransform(ctx: *mut Struct_NVGcontext, a: ::libc::c_float,
                        b: ::libc::c_float, c: ::libc::c_float,
                        d: ::libc::c_float, e: ::libc::c_float,
                        f: ::libc::c_float);
    pub fn nvgTranslate(ctx: *mut Struct_NVGcontext, x: ::libc::c_float,
                        y: ::libc::c_float);
    pub fn nvgRotate(ctx: *mut Struct_NVGcontext, angle: ::libc::c_float);
    pub fn nvgSkewX(ctx: *mut Struct_NVGcontext, angle: ::libc::c_float);
    pub fn nvgSkewY(ctx: *mut Struct_NVGcontext, angle: ::libc::c_float);
    pub fn nvgScale(ctx: *mut Struct_NVGcontext, x: ::libc::c_float,
                    y: ::libc::c_float);
    pub fn nvgCurrentTransform(ctx: *mut Struct_NVGcontext,
                               xform: *mut ::libc::c_float);
    pub fn nvgTransformIdentity(dst: *mut ::libc::c_float);
    pub fn nvgTransformTranslate(dst: *mut ::libc::c_float,
                                 tx: ::libc::c_float, ty: ::libc::c_float);
    pub fn nvgTransformScale(dst: *mut ::libc::c_float, sx: ::libc::c_float,
                             sy: ::libc::c_float);
    pub fn nvgTransformRotate(dst: *mut ::libc::c_float, a: ::libc::c_float);
    pub fn nvgTransformSkewX(dst: *mut ::libc::c_float, a: ::libc::c_float);
    pub fn nvgTransformSkewY(dst: *mut ::libc::c_float, a: ::libc::c_float);
    pub fn nvgTransformMultiply(dst: *mut ::libc::c_float,
                                src: *::libc::c_float);
    pub fn nvgTransformPremultiply(dst: *mut ::libc::c_float,
                                   src: *::libc::c_float);
    pub fn nvgTransformInverse(dst: *mut ::libc::c_float,
                               src: *::libc::c_float) -> ::libc::c_int;
    pub fn nvgTransformPoint(dstx: *mut ::libc::c_float,
                             dsty: *mut ::libc::c_float,
                             xform: *::libc::c_float, srcx: ::libc::c_float,
                             srcy: ::libc::c_float);
    pub fn nvgDegToRad(deg: ::libc::c_float) -> ::libc::c_float;
    pub fn nvgRadToDeg(rad: ::libc::c_float) -> ::libc::c_float;
    pub fn nvgCreateImage(ctx: *mut Struct_NVGcontext,
                          filename: *::libc::c_char) -> ::libc::c_int;
    pub fn nvgCreateImageMem(ctx: *mut Struct_NVGcontext,
                             data: *mut ::libc::c_uchar, ndata: ::libc::c_int)
     -> ::libc::c_int;
    pub fn nvgCreateImageRGBA(ctx: *mut Struct_NVGcontext, w: ::libc::c_int,
                              h: ::libc::c_int, data: *::libc::c_uchar) ->
     ::libc::c_int;
    pub fn nvgUpdateImage(ctx: *mut Struct_NVGcontext, image: ::libc::c_int,
                          data: *::libc::c_uchar);
    pub fn nvgImageSize(ctx: *mut Struct_NVGcontext, image: ::libc::c_int,
                        w: *mut ::libc::c_int, h: *mut ::libc::c_int);
    pub fn nvgDeleteImage(ctx: *mut Struct_NVGcontext, image: ::libc::c_int);
    pub fn nvgLinearGradient(ctx: *mut Struct_NVGcontext, sx: ::libc::c_float,
                             sy: ::libc::c_float, ex: ::libc::c_float,
                             ey: ::libc::c_float, icol: Struct_NVGcolor,
                             ocol: Struct_NVGcolor) -> Struct_NVGpaint;
    pub fn nvgBoxGradient(ctx: *mut Struct_NVGcontext, x: ::libc::c_float,
                          y: ::libc::c_float, w: ::libc::c_float,
                          h: ::libc::c_float, r: ::libc::c_float,
                          f: ::libc::c_float, icol: Struct_NVGcolor,
                          ocol: Struct_NVGcolor) -> Struct_NVGpaint;
    pub fn nvgRadialGradient(ctx: *mut Struct_NVGcontext, cx: ::libc::c_float,
                             cy: ::libc::c_float, inr: ::libc::c_float,
                             outr: ::libc::c_float, icol: Struct_NVGcolor,
                             ocol: Struct_NVGcolor) -> Struct_NVGpaint;
    pub fn nvgImagePattern(ctx: *mut Struct_NVGcontext, ox: ::libc::c_float,
                           oy: ::libc::c_float, ex: ::libc::c_float,
                           ey: ::libc::c_float, angle: ::libc::c_float,
                           image: ::libc::c_int, repeat: ::libc::c_int,
                           alpha: ::libc::c_float) -> Struct_NVGpaint;
    pub fn nvgScissor(ctx: *mut Struct_NVGcontext, x: ::libc::c_float,
                      y: ::libc::c_float, w: ::libc::c_float,
                      h: ::libc::c_float);
    pub fn nvgResetScissor(ctx: *mut Struct_NVGcontext);
    pub fn nvgBeginPath(ctx: *mut Struct_NVGcontext);
    pub fn nvgMoveTo(ctx: *mut Struct_NVGcontext, x: ::libc::c_float,
                     y: ::libc::c_float);
    pub fn nvgLineTo(ctx: *mut Struct_NVGcontext, x: ::libc::c_float,
                     y: ::libc::c_float);
    pub fn nvgBezierTo(ctx: *mut Struct_NVGcontext, c1x: ::libc::c_float,
                       c1y: ::libc::c_float, c2x: ::libc::c_float,
                       c2y: ::libc::c_float, x: ::libc::c_float,
                       y: ::libc::c_float);
    pub fn nvgQuadTo(ctx: *mut Struct_NVGcontext, cx: ::libc::c_float,
                     cy: ::libc::c_float, x: ::libc::c_float,
                     y: ::libc::c_float);
    pub fn nvgArcTo(ctx: *mut Struct_NVGcontext, x1: ::libc::c_float,
                    y1: ::libc::c_float, x2: ::libc::c_float,
                    y2: ::libc::c_float, radius: ::libc::c_float);
    pub fn nvgClosePath(ctx: *mut Struct_NVGcontext);
    pub fn nvgPathWinding(ctx: *mut Struct_NVGcontext, dir: ::libc::c_int);
    pub fn nvgArc(ctx: *mut Struct_NVGcontext, cx: ::libc::c_float,
                  cy: ::libc::c_float, r: ::libc::c_float,
                  a0: ::libc::c_float, a1: ::libc::c_float,
                  dir: ::libc::c_int);
    pub fn nvgRect(ctx: *mut Struct_NVGcontext, x: ::libc::c_float,
                   y: ::libc::c_float, w: ::libc::c_float,
                   h: ::libc::c_float);
    pub fn nvgRoundedRect(ctx: *mut Struct_NVGcontext, x: ::libc::c_float,
                          y: ::libc::c_float, w: ::libc::c_float,
                          h: ::libc::c_float, r: ::libc::c_float);
    pub fn nvgEllipse(ctx: *mut Struct_NVGcontext, cx: ::libc::c_float,
                      cy: ::libc::c_float, rx: ::libc::c_float,
                      ry: ::libc::c_float);
    pub fn nvgCircle(ctx: *mut Struct_NVGcontext, cx: ::libc::c_float,
                     cy: ::libc::c_float, r: ::libc::c_float);
    pub fn nvgFill(ctx: *mut Struct_NVGcontext);
    pub fn nvgStroke(ctx: *mut Struct_NVGcontext);
    pub fn nvgCreateFont(ctx: *mut Struct_NVGcontext, name: *::libc::c_char,
                         filename: *::libc::c_char) -> ::libc::c_int;
    pub fn nvgCreateFontMem(ctx: *mut Struct_NVGcontext,
                            name: *::libc::c_char, data: *mut ::libc::c_uchar,
                            ndata: ::libc::c_int, freeData: ::libc::c_int) ->
     ::libc::c_int;
    pub fn nvgFindFont(ctx: *mut Struct_NVGcontext, name: *::libc::c_char) ->
     ::libc::c_int;
    pub fn nvgFontSize(ctx: *mut Struct_NVGcontext, size: ::libc::c_float);
    pub fn nvgFontBlur(ctx: *mut Struct_NVGcontext, blur: ::libc::c_float);
    pub fn nvgTextLetterSpacing(ctx: *mut Struct_NVGcontext,
                                spacing: ::libc::c_float);
    pub fn nvgTextLineHeight(ctx: *mut Struct_NVGcontext,
                             lineHeight: ::libc::c_float);
    pub fn nvgTextAlign(ctx: *mut Struct_NVGcontext, align: ::libc::c_int);
    pub fn nvgFontFaceId(ctx: *mut Struct_NVGcontext, font: ::libc::c_int);
    pub fn nvgFontFace(ctx: *mut Struct_NVGcontext, font: *::libc::c_char);
    pub fn nvgText(ctx: *mut Struct_NVGcontext, x: ::libc::c_float,
                   y: ::libc::c_float, string: *::libc::c_char,
                   end: *::libc::c_char) -> ::libc::c_float;
    pub fn nvgTextBox(ctx: *mut Struct_NVGcontext, x: ::libc::c_float,
                      y: ::libc::c_float, breakRowWidth: ::libc::c_float,
                      string: *::libc::c_char, end: *::libc::c_char);
    pub fn nvgTextBounds(ctx: *mut Struct_NVGcontext, x: ::libc::c_float,
                         y: ::libc::c_float, string: *::libc::c_char,
                         end: *::libc::c_char, bounds: *mut ::libc::c_float)
     -> ::libc::c_float;
    pub fn nvgTextBoxBounds(ctx: *mut Struct_NVGcontext, x: ::libc::c_float,
                            y: ::libc::c_float,
                            breakRowWidth: ::libc::c_float,
                            string: *::libc::c_char, end: *::libc::c_char,
                            bounds: *mut ::libc::c_float);
    pub fn nvgTextGlyphPositions(ctx: *mut Struct_NVGcontext,
                                 x: ::libc::c_float, y: ::libc::c_float,
                                 string: *::libc::c_char,
                                 end: *::libc::c_char,
                                 positions: *mut Struct_NVGglyphPosition,
                                 maxPositions: ::libc::c_int) ->
     ::libc::c_int;
    pub fn nvgTextMetrics(ctx: *mut Struct_NVGcontext,
                          ascender: *mut ::libc::c_float,
                          descender: *mut ::libc::c_float,
                          lineh: *mut ::libc::c_float);
    pub fn nvgTextBreakLines(ctx: *mut Struct_NVGcontext,
                             string: *::libc::c_char, end: *::libc::c_char,
                             breakRowWidth: ::libc::c_float,
                             rows: *mut Struct_NVGtextRow,
                             maxRows: ::libc::c_int) -> ::libc::c_int;
    pub fn nvgCreateInternal(params: *mut Struct_NVGparams) ->
     *mut Struct_NVGcontext;
    pub fn nvgDeleteInternal(ctx: *mut Struct_NVGcontext);
    pub fn nvgInternalParams(ctx: *mut Struct_NVGcontext) ->
     *mut Struct_NVGparams;
    pub fn nvgDebugDumpPathCache(ctx: *mut Struct_NVGcontext);
}
